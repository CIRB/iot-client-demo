<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.9.RELEASE</version>
  </parent>
  <groupId>brussels.bric.iot</groupId>
  <artifactId>push-sound</artifactId>
  <version>0.1.0</version>
  <packaging>jar</packaging>
  <name>push-sound</name>

  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <nexus.url>http://nexus.cirb.lan</nexus.url>
    <!-- Dependencies versions -->
    <liquibase.slf4j.version>2.0.0</liquibase.slf4j.version>
    <junit.jupiter.version>5.0.2</junit.jupiter.version>
    <junit.vintage.version>4.12.2</junit.vintage.version>
    <junit.platform.version>1.0.2</junit.platform.version>
    <spring.test.junit5.version>1.0.0</spring.test.junit5.version>
    <assertj.version>3.8.0</assertj.version>
    <archunit.version>0.4.0</archunit.version>
    <spring.restdocs.version>2.0.0.RELEASE</spring.restdocs.version>
    <serenity.version>1.4.0</serenity.version>
    <serenity.cucumber.version>1.1.36</serenity.cucumber.version>
    <!-- Sonar -->
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.language>java</sonar.language>
    <!-- Build execution -->
    <test.unit.skip>false</test.unit.skip>
    <docker.build.skip>true</docker.build.skip>
    <docker.image.prefix>app</docker.image.prefix>
    <test.acceptance.functional.skip>true</test.acceptance.functional.skip>
    <test.acceptance.dockerEnv.skip>true</test.acceptance.dockerEnv.skip>
    <test.acceptance.dockerEnv.directory>${project.basedir}/docker</test.acceptance.dockerEnv.directory>
    <test.acceptance.dockerEnv.pre.script>./pre.sh</test.acceptance.dockerEnv.pre.script>
    <test.acceptance.dockerEnv.pre.maxWaitTime>30</test.acceptance.dockerEnv.pre.maxWaitTime>
    <test.acceptance.dockerEnv.post.script>./post.sh</test.acceptance.dockerEnv.post.script>
    <test.acceptance.dockerEnv.port>8080</test.acceptance.dockerEnv.port>
  </properties>

  <repositories>
    <repository>
      <id>cibg-nexus</id>
      <url>${nexus.url}/repository/maven-public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>cibg-nexus</id>
      <url>${nexus.url}/repository/maven-public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <!-- Docker build profile -->
    <profile>
      <id>docker</id>
      <properties>
        <docker.build.skip>false</docker.build.skip>
      </properties>
    </profile>
    <!-- Configuration for acceptance tests -->
    <profile>
      <id>functional-acceptance</id>
      <properties>
        <test.unit.skip>true</test.unit.skip>
        <test.acceptance.functional.skip>false</test.acceptance.functional.skip>
        <test.acceptance.dockerEnv.skip>false</test.acceptance.dockerEnv.skip>
      </properties>
    </profile>
    <profile>
      <id>functional-acceptance-windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <test.acceptance.dockerEnv.pre.script>pre.bat</test.acceptance.dockerEnv.pre.script>
        <test.acceptance.dockerEnv.post.script>post.bat</test.acceptance.dockerEnv.post.script>
      </properties>
    </profile>
  </profiles>

  <build>
    <finalName>push-sound</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.basedir}</directory>
        <includes>
          <include>Dockerfile</include>
        </includes>
        <targetPath>${project.build.directory}</targetPath>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- Docker image build -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${docker.build.skip}</skip>
          <repository>${docker.image.prefix}/${project.build.finalName}</repository>
          <tag>${project.version}</tag>
          <contextDirectory>${project.build.directory}</contextDirectory>
        </configuration>
      </plugin>
      <!-- Unit tests execution -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version><!--$NO-MVN-MAN-VER$ -->
        <configuration>
          <skipTests>${test.unit.skip}</skipTests>
          <runOrder>hourly</runOrder>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Documentation.java</include>
          </includes>
          <excludes>
            <exclude>**/*AcceptanceTest.java</exclude>
          </excludes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit.platform.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.9</version>
        <executions>
          <execution>
            <id>agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>process-test-classes</phase>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
              <append>true</append>
              <skip>${test.unit.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Documentation execution -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.5.6</version>
        <executions>
          <execution>
            <id>generate-docs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <skip>${test.unit.skip}</skip>
              <backend>html</backend>
              <doctype>book</doctype>
              <sourceDirectory>${basedir}/src/docs</sourceDirectory>
              <attributes>
                <snippets>${documentation.snippets.directory}</snippets>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <skip>${test.unit.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/static/docs/asciidoc</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-docs</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Acceptance tests execution -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>start-containers</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <skip>${test.acceptance.dockerEnv.skip}</skip>
              <workingDirectory>${test.acceptance.dockerEnv.directory}</workingDirectory>
              <executable>${test.acceptance.dockerEnv.pre.script}</executable>
              <commandlineArgs>${test.acceptance.dockerEnv.pre.maxWaitTime} ${test.acceptance.dockerEnv.port}</commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>stop-containers</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <skip>${test.acceptance.dockerEnv.skip}</skip>
              <workingDirectory>${test.acceptance.dockerEnv.directory}</workingDirectory>
              <executable>${test.acceptance.dockerEnv.post.script}</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <skipTests>${test.acceptance.functional.skip}</skipTests>
          <includes>
            <include>**/*AcceptanceTest.java</include>
          </includes>
          <argLine>-Dacceptance.port=${test.acceptance.dockerEnv.port}</argLine>
        </configuration>
        <executions>
          <execution>
            <id>verify</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Aggregate serenity acceptance tests reports -->
      <plugin>
        <groupId>net.serenity-bdd.maven.plugins</groupId>
        <artifactId>serenity-maven-plugin</artifactId>
        <version>${serenity.version}</version>
        <executions>
          <execution>
            <id>serenity-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator-docs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-parameter-names</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apiguardian</groupId>
      <artifactId>apiguardian-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.sbrannen</groupId>
      <artifactId>spring-test-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.serenity-bdd</groupId>
      <artifactId>serenity-cucumber</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.vintage.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-launcher</artifactId>
        <version>${junit.platform.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apiguardian</groupId>
        <artifactId>apiguardian-api</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.sbrannen</groupId>
        <artifactId>spring-test-junit5</artifactId>
        <version>${spring.test.junit5.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tngtech.archunit</groupId>
        <artifactId>archunit-junit</artifactId>
        <version>${archunit.version}</version>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-core</artifactId>
        <version>${serenity.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-rest-assured</artifactId>
        <version>${serenity.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.serenity-bdd</groupId>
        <artifactId>serenity-cucumber</artifactId>
        <version>${serenity.cucumber.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
